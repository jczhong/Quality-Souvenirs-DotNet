@model IEnumerable<QualitySouvenirs.Models.Souvenir>

@{
    ViewData["Title"] = "Product";
    List<Category> Categories = (List<Category>)ViewData["Categories"];
    int FilterID = (int)(ViewData["FilterID"] ?? -1);
}

<div class="ProductOpsRow">
    <div class="ProductOpsSubRow">
        <div class="dropdown">
            <button class="btn btn-default dropdown-toggle" type="button" id="CategoryDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Categories
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="CategoryDropdownMenu">
                @foreach (var item in Categories)
                {
                    <li><a asp-controller="Product" asp-action="Index" asp-route-id="@item.ID" asp-route-byId="true" asp-route-sort="@ViewData["SortType"]">@item.Name</a></li>
                }
            </ul>
        </div>
        <div class="ProductOpsCol">
            <form class="form-inline mx-auto">
                <input class="form-control" type="search" placeholder="Search for product" />
                <button class="btn btn-outline-secondary" type="submit">Go</button>
            </form>
        </div>
    </div>

    <div class="ProductOpsSubRow">
        <div class="ProductOpsCol">
            Showing 1 - 3 of 3 products
        </div>
        @await Html.PartialAsync("_SortSelector", ViewData["SortViewModel"])
    </div>
</div>

<div class="ProductFilterRow">
    @if (FilterID > -1)
    {
        <div class="ProductFilterCol">
            <span>@Categories.Find(x => x.ID == FilterID).Name</span>
            <a class='ProductFilterDelete' asp-controller="Product" asp-action="Index" asp-route-id="" asp-route-sort="@ViewData["SortType"]">X</a>
        </div>
    }
</div>

<div class="ProductItemRow">
    @foreach (var item in Model)
    {
        <div class="ProductItem">
            <div class="ProductImag text-center">
                <a><img src="http://placehold.it/150x200" /></a>
            </div>
            <div class="ProductName text-center">@Html.DisplayFor(modelItem => item.Name)</div>
            <div class="ProductPrice text-center">$@Html.DisplayFor(modelItem => item.Price)</div>
            <div class="ProductOrder text-center"><button type="button" class="btn btn-default">Add to Cart</button></div>
        </div>
    }
</div>
