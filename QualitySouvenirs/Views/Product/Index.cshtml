@using QualitySouvenirs.Utilities
@model PaginatedList<QualitySouvenirs.Models.Souvenir>

@{
    ViewData["Title"] = "Product";
    List<Category> Categories = (List<Category>)ViewData["Categories"];
    int FilterID = (int)(ViewData["FilterID"] ?? -1);
}

<div class="ProductOpsRow">
    <div class="ProductOpsSubRow">
        <div class="dropdown">
            <button class="btn btn-default dropdown-toggle" type="button" id="CategoryDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                Categories
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" aria-labelledby="CategoryDropdownMenu">
                @foreach (var item in Categories)
                {
                    <li>
                        <a asp-controller="Product" asp-action="Index"
                            asp-route-id="@item.ID" 
                            asp-route-byId="true"
                            asp-route-sort="@ViewData["SortType"]" 
                            asp-route-search="@ViewData["SearchString"]"
                            asp-route-page="@Model.PageIndex"
                            asp-route-minprice="@ViewData["MinPrice"]"
                            asp-route-maxprice="@ViewData["MaxPrice"]">@item.Name</a>
                    </li>
                }
            </ul>
        </div>
        <div class="ProductOpsCol">
            <form class="form-inline mx-auto"
                asp-controller="Product"
                asp-action="Index"
                asp-route-id="@ViewData["FilterID"]"
                asp-route-byId="@ViewData["FilterById"]"
                asp-route-sort="@ViewData["SortType"]"
                asp-route-page="@Model.PageIndex">      
                <input class="form-control" type="search" placeholder="Search for product" name="search" style="margin-right:1em"/>

                <input style="width:100px" type="number" class="form-control" id="MinPrice" name="minprice" placeholder="MinPrice" min="0" value="@ViewData["MinPrice"]">
                <span>-</span>
                <input style="width:100px" type="number" class="form-control" id="MaxPrice" name="maxprice" placeholder="MaxPrice" min="0" value="@ViewData["MaxPrice"]">
                <button class="btn btn-outline-secondary" type="submit">Go</button>
            </form>
        </div>
    </div>

    <div class="ProductOpsSubRow">
        <div class="ProductOpsCol">
            Showing 1 - 3 of 3 products
        </div>
        @await Html.PartialAsync("_SortSelector", ViewData["SortViewModel"], new ViewDataDictionary(ViewData))
    </div>
</div>

<div class="ProductFilterRow">
    @if (FilterID > -1)
    {
        <div class="ProductFilterCol">
            <span>@Categories.Find(x => x.ID == FilterID).Name</span>
            <a class='ProductFilterDelete' asp-controller="Product" asp-action="Index"
                asp-route-id="" 
                asp-route-byId="false"
                asp-route-sort="@ViewData["SortType"]"
                asp-route-search="@ViewData["SearchString"]"
                asp-route-page="@Model.PageIndex"
                asp-route-minprice="@ViewData["MinPrice"]"
                asp-route-maxprice="@ViewData["MaxPrice"]">X</a>
        </div>
    }
    @if (ViewData["SearchString"] != null)
    {
        <div class="ProductFilterCol">
            <span>Search: @ViewData["SearchString"]</span>
            <a class='ProductFilterDelete' asp-controller="Product" asp-action="Index"
                asp-route-id="@ViewData["FilterID"]" 
                asp-route-byId="@ViewData["FilterById"]"
                asp-route-sort="@ViewData["SortType"]"
                asp-route-page="@Model.PageIndex"
                asp-route-minprice="@ViewData["MinPrice"]"
                asp-route-maxprice="@ViewData["MaxPrice"]">X</a>
        </div>
    }
</div>

<div class="ProductItemRow">
    @foreach (var item in Model)
    {
        <div class="ProductItem">
            <div class="ProductImag text-center">
                <a asp-controller="Product" asp-action="ProductDetail"
                   asp-route-id="@item.ID"><img src="http://placehold.it/150x200" /></a>
            </div>
            <div class="ProductName text-center">@Html.DisplayFor(modelItem => item.Name)</div>
            <div class="ProductPrice text-center">$@Html.DisplayFor(modelItem => item.Price)</div>
            <div class="ProductOrder text-center"><button type="button" class="btn btn-default" id="AddToCart-@item.ID" value="1">Add to Cart</button></div>
        </div>
    }
</div>

<div class="PageIndexRow">
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <a asp-action="Index"
        asp-route-id="@ViewData["FilterID"]"
        asp-route-byId="@ViewData["FilterById"]"
        asp-route-sort="@ViewData["SortType"]"
        asp-route-search="@ViewData["SearchString"]"
        asp-route-page="@(Model.PageIndex - 1)"
        asp-route-minprice="@ViewData["MinPrice"]"
        asp-route-maxprice="@ViewData["MaxPrice"]"
            class="btn btn-default @prevDisabled PageIndexItem">
        Prev
    </a>
    <a asp-action="Index"
        asp-route-id="@ViewData["FilterID"]"
        asp-route-byId="@ViewData["FilterById"]"
        asp-route-sort="@ViewData["SortType"]"
        asp-route-search="@ViewData["SearchString"]"
        asp-route-page="@(Model.PageIndex + 1)"
        asp-route-minprice="@ViewData["MinPrice"]"
        asp-route-maxprice="@ViewData["MaxPrice"]"
            class="btn btn-default @nextDisabled PageIndexItem">
        Next
    </a>
</div>
